kind: Template
apiVersion: v1
metadata: 
  name: kafka
  creationTimestamp: null
  annotations: 
    description: Example of replicated Kafka
    iconClass: "icon-database"
    tags: "database,kafka"
objects: 
  - kind: ServiceAccount
    apiVersion: v1
    metadata:
      name: kafka
#  - kind: SecurityContextConstraints
#    apiVersion: v1
#    metadata:
#      name: allowhostports
#    allowHostDirVolumePlugin: false
#    allowHostNetwork: false
#    allowHostPorts: true
#    allowPrivilegedContainer: false
#    allowedCapabilities: null
#    runAsUser:
#      type: MustRunAsRange
#    seLinuxContext:
#      type: MustRunAs
#    users:
#    - system:serviceaccount:default:kafka
  - kind: ImageStream
    apiVersion: v1
    metadata: 
      name: "kafka-0.8.2"
      creationTimestamp: null
    spec: 
      dockerImageRepository: "${KAFKA_IMAGE}"
      tags: 
        - name: latest
          annotations: 
            description: Provides a Kafka server
            iconClass: "icon-database"
            tags: "service,kafka"
            version: 0.8.2
    status: 
      dockerImageRepository: ""
  - kind: Service
    apiVersion: v1
    metadata: 
      name: kafka
      creationTimestamp: null
      labels: 
        name: kafka
    spec: 
      ports: 
        - name: client
          protocol: TCP
          port: 9092
          targetPort: 9092
          nodePort: 0
      selector: 
        name: kafka
      type: ClusterIP
      sessionAffinity: None
    status: 
      loadBalancer: {}
  - kind: Service
    apiVersion: v1
    metadata: 
      name: "kafka-1"
      creationTimestamp: null
      labels: 
        name: "kafka-1"
    spec: 
      ports: 
        - name: client
          protocol: TCP
          port: 9092
          targetPort: 9092
          nodePort: 0
      selector: 
        "server-id": "1"
      type: ClusterIP
      sessionAffinity: None
    status: 
      loadBalancer: {}
  - kind: Service
    apiVersion: v1
    metadata: 
      name: "kafka-2"
      creationTimestamp: null
      labels: 
        name: "kafka-2"
    spec: 
      ports: 
        - name: client
          protocol: TCP
          port: 9092
          targetPort: 9092
          nodePort: 0
      selector: 
        "server-id": "2"
      type: ClusterIP
      sessionAffinity: None
    status: 
      loadBalancer: {}
  - kind: Service
    apiVersion: v1
    metadata: 
      name: "kafka-3"
      creationTimestamp: null
      labels: 
        name: "kafka-3"
    spec: 
      ports: 
        - name: client
          protocol: TCP
          port: 9092
          targetPort: 9092
          nodePort: 0
      selector: 
        "server-id": "3"
      type: ClusterIP
      sessionAffinity: None
    status: 
      loadBalancer: {}

  - kind: ReplicationController
    apiVersion: v1
    metadata: 
      name: "kafka-1"
      creationTimestamp: null
      labels: 
        name: kafka
    spec: 
      replicas: 1
      selector:
        name: kafka
        "server-id": "1"
      template:
        metadata: 
          labels: 
            name: kafka
            "server-id": "1"
        spec: 
          containers: 
            - name: server
              image: "${KAFKA_IMAGE}"
              ports: 
                - containerPort: 9092
                  hostPort: 9092
                  protocol: TCP
              env: 
                - name: SERVER_ID
                  value: "1"
              resources: {}
              terminationMessagePath: "/dev/termination-log"
              imagePullPolicy: IfNotPresent
              securityContext: 
                capabilities: {}
                privileged: false
          serviceAccount: kafka
          restartPolicy: Always
          dnsPolicy: ClusterFirst
        status: {}

  - kind: ReplicationController
    apiVersion: v1
    metadata: 
      name: "kafka-2"
      creationTimestamp: null
      labels: 
        name: kafka
    spec: 
      replicas: 1
      selector:
        name: kafka
        "server-id": "2"
      template:
        metadata: 
          labels: 
            name: kafka
            "server-id": "2"
        spec: 
          containers: 
            - name: server
              image: "${KAFKA_IMAGE}"
              ports: 
                - containerPort: 9092
                  hostPort: 9092
                  protocol: TCP
              env: 
                - name: SERVER_ID
                  value: "2"
              resources: {}
              terminationMessagePath: "/dev/termination-log"
              imagePullPolicy: IfNotPresent
              securityContext: 
                capabilities: {}
                privileged: false
          serviceAccount: kafka
          restartPolicy: Always
          dnsPolicy: ClusterFirst
        status: {}

  - kind: ReplicationController
    apiVersion: v1
    metadata: 
      name: "kafka-3"
      creationTimestamp: null
      labels: 
        name: kafka
    spec: 
      replicas: 1
      selector:
        name: kafka
        "server-id": "3"
      template:
        metadata: 
          labels: 
            name: kafka
            "server-id": "3"
        spec: 
          containers: 
            - name: server
              image: "${KAFKA_IMAGE}"
              ports: 
                - containerPort: 9092
                  hostPort: 9092
                  protocol: TCP
              env: 
                - name: SERVER_ID
                  value: "3"
              resources: {}
              terminationMessagePath: "/dev/termination-log"
              imagePullPolicy: IfNotPresent
              securityContext: 
                capabilities: {}
                privileged: false
          serviceAccount: kafka
          restartPolicy: Always
          dnsPolicy: ClusterFirst
        status: {}

parameters: 
  - name: ZOOKEEPER_URLS
    displayName: Zookeeper cluster urls
    description: The urls of the zookeeper cluster to use, comma-separated.
    value: zookeeper:2181
  - name: KAFKA_IMAGE
    displayName: Kafka Docker Image
    description: The name of Kafka Docker image to use
    value: "ibotty/kafka-0.8.2"
labels: 
  template: kafka
